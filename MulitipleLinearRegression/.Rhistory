setwd("D:/Statistics/Regression/Mulitiple Linear Regression")
ins_data <- read.csv("Mulitiple Linear Regression", header = TRUE)
# Import Libraries:
library(tidyverse)
library(dplyr)
library(caret)
library(ggpubr)
path = "D:\Statistics\Regression\Mulitiple Linear Regression"
path = "D:\Statistics\Regression\Mulitiple Linear Regression\Insurance"
ins_data <- read.csv("Insurance.csv", header = TRUE)
attach(ins_data)
View(ins_data)
corr(ins_data)
cor(ins_data)
library(ggcorrplot)
ggcorrplot(round(cor(ins_data), 1), hc.order = TRUE, type = lower,
outline.col = "white",
ggtheme = ggbubr::theme_pubclean(),
colors = c("#6D9EC1", "white", "#E46726"),
lab = TRUE)
ggcorrplot(round(cor(ins_data), 1), hc.order = TRUE, type = "lower",
outline.col = "white",
ggtheme = ggbubr::theme_pubclean(),
colors = c("#6D9EC1", "white", "#E46726"),
lab = TRUE)
ggcorrplot(round(cor(ins_data), 1), hc.order = TRUE, type = "lower",
outline.col = "white",
ggtheme = ggpubr::theme_pubclean(),
colors = c("#6D9EC1", "white", "#E46726"),
lab = TRUE)
ins_data$sex <- as.factor(ins_data$sex)
ins_data$smoker <- as.factor(ins_data$smoker)
nunique(ins_data$children)
library(ggcorrplot)
unique(ins_data$children)
ins_data$children <-as.factor(ins_data$children)
train <- ins_data$insuranceclaim %>%
createDataPartition(p = 0.65, list = FALSE)
train.data <- ins_data[train, ]
Validation.data <- ins_data[-train, ]
predictions <- lm.fit %>% predict(Validation.data)
train <- ins_data$insuranceclaim %>%
createDataPartition(p = 0.65, list = FALSE)
train.data <- ins_data[train, ]
Validation.data <- ins_data[-train, ]
# Linear Model
lm.fit <- lm(insuranceclaim~., data = train.data)
summary(lm.fit)
# Predict ________________
predictions <- lm.fit %>% predict(Validation.data)
data.frame(RMSE = RMSE(predictions, Validation.data$insuranceclaim),
R2 = R2(predictions, Validation.data$insuranceclaim),
MAE = MAE(predictions, Validation.data$insuranceclaim),
PER = RMSE(predictions, Validation.data$insuranceclaim)/mean(Validation.data$insuranceclaim))
library(leaps)
sub_fit <-  regsubsets(insuranceclaim~., data = ins_data)
summary_sub_fit <- summary(sub_fit)
summary_sub_fit
names(summary(sub_fit))
summary_sub_fit$rsq
theme_set(theme_pubr())
plot(summary_sub_fit$rss, xlab = "NUmber of Variables", ylab = "RSS", type = "l")
plot(summary_sub_fit$adjr2,
xlab = "Number of Variables",
ylab = "Adjusted RSq",
type = "l")
which.max(summary_sub_fit$adjr2)
points(2, summary_sub_fit$adjr2[2], col = "red", cex = 2, pch = 20)
coef(summary_sub_fit, 2)
coef(sub_fit, 2)
best_select_fit <- lm(insuranceclaim~ bmi + smoker, data = train.data)
summary(best_select_fit)
predict1 <- best_select_fit %>% predict(Validation.data)
predict1 <- best_select_fit %>% predict(Validation.data)
data.frame(RMSE = RMSE(predict1, Validation.data$insuranceclaim),
R2 = R2(predict1, Validation.data$insuranceclaim),
MAE = MAE(predict1, Validation.data$insuranceclaim),
PER = RMSE(predict1, Validation.data$insuranceclaim)/mean(Validation.data$insuranceclaim))
coef(sub_fit, 2)
