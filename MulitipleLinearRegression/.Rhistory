setwd("D:/Statistics/Regression/MulitipleLinearRegression")
library(tidyverse)
library(dplyr)
library(caret)
library(ggpubr)
library(ggcorrplot)
ins_data <- read.csv("Insurance.csv", header = TRUE)
attach(ins_data)
View(ins_data)
train <- ins_data$insuranceclaim %>% createDataPartition(p = 0.65, list = FALSE)
train.data <- ins_data[train, ]
test.data <- ins_data[-train, ]
model.fit <- lm(insuranceclaim~., data = train.data)
summary(model.fit)
predict <- model.fit %>% predict(test.data)
data.frame(RMSE = RMSE(predict, test.data$insuranceclaim), R2 = R2(predict, test.data$insuranceclaim), MAE = MAE(predict, test.data$insuranceclaim))
library(leaps)
sub_fit <- regsubsets(insuranceclaim~., data = train.data)
summary(sub_fit)
summary(sub_fit)$rsq
predictions <- sub_fit %>% predict(test.data)
PER <- rep(NA, 7)
for (i in 1:7){
coefi = coef(sub_fit, i)
pred = )
test.mat = model.matrix(insuranceclaim~., data = test.data)
for(i in 1:7){
coefi = coef(sub_fit, id = i)
pred= test.mat[,names(coefi)]%*%coefi
PER[i] = mean((ins_data$insuranceclaim[(!train)]-pred)^2)
}
ins_data <- read.csv("Insurance.csv", header = TRUE)
attach(ins_data)
View(ins_data)
str(data)
structure(ins_data)
str(ins_data)
ins_data$sex <- as.factor(ins_data$sex)
ins_data$smoker <- as.factor(ins_data$smoker)
train <- ins_data$charges %>%
createDataPartition(p = 0.65, list = FALSE)
train.data <- ins_data[train, ]
Validation.data <- ins_data[-train, ]
lm.fit <- lm(charges~., data = train.data)
summary(lm.fit)
unique(ins_data$region)
predictions <- lm.fit %>% predict(Validation.data)
data.frame(RMSE = RMSE(predictions, Validation.data$insuranceclaim),
R2 = R2(predictions, Validation.data$insuranceclaim),
MAE = MAE(predictions, Validation.data$insuranceclaim),
PER = RMSE(predictions, Validation.data$insuranceclaim)/mean(Validation.data$insuranceclaim))
data.frame(RMSE = RMSE(predictions, Validation.data$charges),
R2 = R2(predictions, Validation.data$charges),
MAE = MAE(predictions, Validation.data$charges),
PER = RMSE(predictions, Validation.data$charges)/mean(Validation.data$charges))
sub_fit <-  regsubsets(charges~., data = train.data)
summary_sub_fit <- summary(sub_fit)
summary_sub_fit
summary_sub_fit$rsq
theme_set(theme_pubr())
par(mfrow = c(2, 2))
plot(summary_sub_fit$rss,
xlab = "NUmber of Variables",
ylab = "RSS",
type = "l")
plot(summary_sub_fit$adjr2,
xlab = "Number of Variables",
ylab = "Adjusted RSq",
type = "l")
which.max(summary_sub_fit$adjr2)
points(2, summary_sub_fit$adjr2[2], col = "red", cex = 2, pch = 20)
plot(summary_sub_fit$bic, xlab = "NUmber of Variables", ylab = "BIC", type = "l")
which.min(summary_sub_fit$bic)
plot(summary_sub_fit$rss,
xlab = "NUmber of Variables",
ylab = "RSS",
type = "l")
plot(summary_sub_fit$adjr2,
xlab = "Number of Variables",
ylab = "Adjusted RSq",
type = "l")
which.max(summary_sub_fit$adjr2)
points(5, summary_sub_fit$adjr2[5], col = "red", cex = 2, pch = 20)
plot(summary_sub_fit$bic, xlab = "NUmber of Variables", ylab = "BIC", type = "l")
which.min(summary_sub_fit$bic)
points(3, summary_sub_fit$adjr2[3], col = "red", cex = 2, pch = 20)
points(3, summary_sub_fit$bic[3], col = "red", cex = 2, pch = 20)
plot(summary_sub_fit$cp, xlab = "Number of Variables", ylab = "Cp", type = "l")
which.min(summary_sub_fit$cp)
points(4, summary_sub_fit$cp[4], col = "red", cex = 2, pch = 20)
par(mfrow = c(2, 2))
plot(sub_fit, scale="r2")
plot(sub_fit, scale="adjr2")
plot(sub_fit, scale="cp")
plot(sub_fit, scale="Cp")
plot(sub_fit, scale="bic")
plot(sub_fit, scale = "adjr2", main = "Ajusted R^2")
subsets(sub_fit, statistic = "adjr2", legend = FALSE, min.size = 5, main = "Adjusted R^2")
library(car)
layout(matrix(1:2), ncol =2)
subsets(sub_fit, statistic = "adjr2", legend = FALSE, min.size = 5, main = "Adjusted R^2")
subsets(sub_fit, static = "Cp", lelegend = FALSE, min.size = 5, main = "Mallow Cp ")
abline(a = 1, b = 1, lty = 2)
abline(a = 1, b = 1, lty = 2)
)
subsets(sub_fit, static = "Cp", legend = FALSE, min.size = 5, main = "Mallow Cp ")
abline(a = 1, b = 1, lty = 2)
subsets(sub_fit, static = "cp", legend = FALSE, min.size = 5, main = "Mallow Cp ")
abline(a = 1, b = 1, lty = 2)
library(car)
layout(matrix(1:2), ncol =2)
res.legend <-
subsets(sub_fit, statistic = "adjr2", legend = FALSE, min.size = 5, main = "Adjusted R^2")
res.legend <-
subsets(sub_fit, static = "cp", legend = FALSE, min.size = 5, main = "Mallow Cp ")
abline(a = 1, b = 1, lty = 2)
library(car)
layout(matrix(1:2), ncol =2)
res.legend <-
subsets(sub_fit, statistic = "adjr2", legend = FALSE, min.size = 5, main = "Adjusted R^2")
res.legend <-
subsets(sub_fit, static = "cp", legend = FALSE, min.size = 5, main = "Mallow Cp ")
abline(a = 1, b = 1, lty = 2)
which.max(summary(sub_fit)$adjr2)
summary(sub_fit)$which[7,]
PER <- rep(NA, 7)
for (i in 1:7){
coefi = coef(sub_fit, id = i)
pred = test.mat[, names(cofei)]%*%coefi
PER[i] = mean((ins_data$charges[(!train)]-pred)^2)
}
PER <- rep(NA, 7)
for (i in 1:7){
coefi = coef(sub_fit, id = i)
pred = test.mat[, names(coefi)]%*%coefi
PER[i] = mean((ins_data$charges[(!train)]-pred)^2)
}
test.mat = model.matrix(charges~., data = validation.data)
library(tidyverse)
library(dplyr)
library(caret)
library(ggpubr)
library(ggcorrplot)
# Import data:
ins_data <- read.csv("Insurance.csv", header = TRUE)
attach(ins_data)
View(ins_data)
str(ins_data)
ggcorrplot(round(cor(ins_data), 1), hc.order = TRUE, type = "lower",
outline.col = "white",
ggtheme = ggpubr::theme_pubclean(),
colors = c("#6D9EC1", "white", "#E46726"),
lab = TRUE)
ins_data$sex <- as.factor(ins_data$sex)
ins_data$smoker <- as.factor(ins_data$smoker)
train <- ins_data$charges %>%
createDataPartition(p = 0.65, list = FALSE)
train.data <- ins_data[train, ]
Validation.data <- ins_data[-train, ]
lm.fit <- lm(charges~., data = train.data)
summary(lm.fit)
predictions <- lm.fit %>% predict(Validation.data)
data.frame(RMSE = RMSE(predictions, Validation.data$charges),
R2 = R2(predictions, Validation.data$charges),
MAE = MAE(predictions, Validation.data$charges),
PER = RMSE(predictions, Validation.data$charges)/mean(Validation.data$charges))
set.seed(123)
train <- ins_data$charges %>%
createDataPartition(p = 0.65, list = FALSE)
train.data <- ins_data[train, ]
Validation.data <- ins_data[-train, ]
# Linear Model
lm.fit <- lm(charges~., data = train.data)
summary(lm.fit)
# Predict ________________
predictions <- lm.fit %>% predict(Validation.data)
data.frame(RMSE = RMSE(predictions, Validation.data$charges),
R2 = R2(predictions, Validation.data$charges),
MAE = MAE(predictions, Validation.data$charges),
PER = RMSE(predictions, Validation.data$charges)/mean(Validation.data$charges))
set.seed(123)
train <- ins_data$charges %>%
createDataPartition(p = 0.65, list = FALSE)
train.data <- ins_data[train, ]
Validation.data <- ins_data[-train, ]
# Linear Model
lm.fit <- lm(charges~., data = train.data)
summary(lm.fit)
# Predict ________________
predictions <- lm.fit %>% predict(Validation.data)
# Model performance:
data.frame(RMSE = RMSE(predictions, Validation.data$charges),
R2 = R2(predictions, Validation.data$charges),
MAE = MAE(predictions, Validation.data$charges),
PER = RMSE(predictions, Validation.data$charges)/mean(Validation.data$charges))
library(leaps)
sub_fit <-  regsubsets(charges~., data = train.data)
summary_sub_fit <- summary(sub_fit)
names(summary(sub_fit))
summary_sub_fit$rsq
summary_sub_fit$adjr2
library(leaps)
sub_fit <-  regsubsets(charges~., data = train.data)
summary_sub_fit <- summary(sub_fit)
names(summary(sub_fit))
summary_sub_fit$rsq
summary_sub_fit$adjr2
set.seed(123)
sub_fit <-  regsubsets(charges~., data = train.data)
summary_sub_fit <- summary(sub_fit)
names(summary(sub_fit))
summary_sub_fit$rsq
summary_sub_fit$adjr2
library(leaps)
set.seed(123)
sub_fit <-  regsubsets(charges~., data = train.data)
summary_sub_fit <- summary(sub_fit)
names(summary(sub_fit))
summary_sub_fit$rsq
summary_sub_fit$adjr2
PER <- rep(NA, 7)
for (i in 1:7){
coefi = coef(sub_fit, id = i)
pred = test.mat[, names(coefi)]%*%coefi
PER[i] = mean((ins_data$charges[(!train)]-pred)^2)
}
test.mat <- model.matrix(charges~., data = Validation.data)
PER <- rep(NA, 7)
for (i in 1:7){
coefi = coef(sub_fit, id = i)
pred = test.mat[, names(coefi)]%*%coefi
PER[i] = mean((ins_data$charges[(!train)]-pred)^2)
}
PER
set.seed(123)
sub_fit <-  regsubsets(charges~., data = train.data, nvmax = 7)
summary_sub_fit <- summary(sub_fit)
test.mat <- model.matrix(charges~., data = Validation.data)
test.mat[, names(coefi)
]
test.mat[, names(coefi)]%*%coefi
test.mat <- model.matrix(charges~., data = Validation.data)
PER <- rep(NA, 7)
for (i in 1:7){
coefi = coef(sub_fit, id = i)
pred = test.mat[, names(coefi)]%*%coefi
PER[i] = mean((Validation.data$charges-pred)^2)
}
PER
test.mat <- model.matrix(charges~., data = Validation.data)
PER <- rep(NA, 7)
for (i in 1:7){
coefi = coef(sub_fit, id = i)
pred = test.mat[, names(coefi)]%*%coefi
PER[i] = mean((ins_data$charges[(!train)]-pred)^2)
}
dim(ins_data[(!train),]$charges)
dim(ins_data[!train,]$charges)
dim(ins_data[-train,]$charges)
dim(ins_data$charges[-train,])
dim(ins_data$charges[(!train),])
dim(ins_data$charges[(!train)])
dim(Validation.data$charges)
str(Validation.data)
View(Validation.data)
dim(Validation.data)
ins_data$charges[(!train)]
test = (!train)
ins_data$charges[test]
test.mat <- model.matrix(charges~., data = Validation.data)
PER <- rep(NA, 7)
for (i in 1:7){
coefi = coef(sub_fit, id = i)
pred = test.mat[, names(coefi)]%*%coefi
PER[i] = mean((Validation.data$charges-pred)^2)
}
PER
PER <- rep(NA, 7)
for (i in 1:7){
coefi = coef(sub_fit, id = i)
pred = test.mat[, names(coefi)]%*%coefi
PER[i] = RMSE(pred, Validation.data$charges)/mean(Validation.data$charges)
}
PER
theme_set(theme_pubr())
par(mfrow = c(2, 2))
plot(summary_sub_fit$rss,
xlab = "NUmber of Variables",
ylab = "RSS",
type = "l")
plot(summary_sub_fit$adjr2,
xlab = "Number of Variables",
ylab = "Adjusted RSq",
type = "l")
which.max(summary_sub_fit$adjr2)
points(5, summary_sub_fit$adjr2[5], col = "red", cex = 2, pch = 20)
theme_set(theme_pubr())
par(mfrow = c(2, 2))
plot(summary_sub_fit$rss,
xlab = "NUmber of Variables",
ylab = "RSS",
type = "l")
plot(summary_sub_fit$adjr2,
xlab = "Number of Variables",
ylab = "Adjusted RSq",
type = "l")
which.max(summary_sub_fit$adjr2)
summary_sub_fit <- summary(sub_fit)
which.max(summary_sub_fit$adjr2)
points(7, summary_sub_fit$adjr2[7], col = "red", cex = 2, pch = 20)
plot(summary_sub_fit$bic, xlab = "NUmber of Variables", ylab = "BIC", type = "l")
which.min(summary_sub_fit$bic)
points(3, summary_sub_fit$bic[3], col = "red", cex = 2, pch = 20)
plot(summary_sub_fit$bic, xlab = "NUmber of Variables", ylab = "BIC", type = "l")
which.min(summary_sub_fit$bic)
points(4, summary_sub_fit$bic[4], col = "red", cex = 2, pch = 20)
plot(summary_sub_fit$cp, xlab = "Number of Variables", ylab = "Cp", type = "l")
which.min(summary_sub_fit$cp)
plot(summary_sub_fit$cp, xlab = "Number of Variables", ylab = "Cp", type = "l")
which.min(summary_sub_fit$cp)
points(7, summary_sub_fit$cp[7], col = "red", cex = 2, pch = 20)
plot(sub_fit, scale = "adjr2", main = "Ajusted R^2")
plot(sub_fit, scale = "adjr2", main = "Ajusted R^2")
layout(matrix(1:2), ncol =2)
res.legend <-
subsets(sub_fit, statistic = "adjr2", legend = FALSE, min.size = 5, main = "Adjusted R^2")
res.legend <-
subsets(sub_fit, static = "cp", legend = FALSE, min.size = 5, main = "Mallow Cp ")
abline(a = 1, b = 1, lty = 2)
which.max(summary(sub_fit)$adjr2)
summary(sub_fit)$which[7,]
best_model <-
lm(charges = age + bmi + children + smoker + region, data = train.data)
best_model <-
lm(charges ~ age + bmi + children + smoker + region, data = train.data)
summary(best_model)
predictions <- best_model %>% predict(Validation.data)
RMSE(predictions, Validation.data$charges)
R2(predictions, Validation.data$charges)
MAE(predictions, Validation.data$charges)
RMSE(predictions, Validation.data$charges)/mean(Validation.data$charges)
