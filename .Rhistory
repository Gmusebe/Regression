x <- rnorm(1:100)
set.seed(154)
y <- rnorm(1:5)
x <- rnorm(1:100)
set.seed(154)
y <- rnorm(1:5)
set.seed(154)
z <- rnorm(1:10)
plot(x, type='l', panel.first=grid(), main="Random Dataset X")
plot(y, type='l', panel.first=grid(), main="Random Dataset Y")
plot(z, type='l', panel.first=grid(), main="Random Dataset Z")
set.seed(78)
matrix.dat <-data.frame(matrix(rnorm(15), ncol=3))
row.sum <-apply(matrix.dat, MARGIN=1, FUN=sum)
matrix.dat <-cbind(matrix.dat, row.sum)
matrix.dat
col.sum <-apply(matrix.dat, MARGIN=2, FUN=sum)
col.sum
matrix.dat <-rbind(matrix.dat, col.sum)
matrix.dat
colnames(matrix.dat)[1:3] <- c("A", "B", "C")
rownames(matrix.dat) <- c("i", "ii", "iii", "iv", "v", "col.sum")
matrix.dat
set.seed(132)
x <- data.frame(matrix(rnorm(6), ncol=2))
set.seed(98)
y <- rnorm(3)
x$new <-y
x
nums  <- read.table("/dev/stdin", sep = " ")
data()
data(sleep)
force(sleep)
data(women)
force(women)
data <- data(women)
values <- data(women)
force(women)
colname(values)
colname(values)
colnames(values)
data(women)
colnames(women)
values <- women$height
values <- as.list(as.data.frame(t(values)))
View(values)
write.table(as.numeric(values[1])+as.numeric(nums[2]), sep = "", append=T, row.names = F, col.names = F)
write.table(as.numeric(values[1])+as.numeric(values[2]), sep = "", append=T, row.names = F, col.names = F)
values <- (123, 456, 789, 101112, 131415, 161718, 192021, 222324, 252627, 282930)
n <- 10
n
n <- 10
n
X <- c(123, 456, 789, 101112, 131415, 161718, 192021, 222324, 252627, 282930)
X
sum(X)
mean(X)
n <- 10
print(n)
X <- c(123, 456, 789, 101112, 131415, 161718, 192021, 222324, 252627, 282930)
print(X)
print(mean(X))
print(median(X))
getmode <- function(X){
uniqx <- unique(X)
uniqx[which.max(tabulate(match(X, uniqx)))]
}
mode <- getmode(X)
print(mode)
n <- 10
print(n)
X <- c(64630, 11735, 14216, 99233, 14470, 4978, 73429, 38120, 51135, 67060)
print(X)
STDIN <- c(n, X)
STDIN
print(mean(X))
(mean(X))
median(X)
getmode <- function(X){
uniqx <- unique(X)
uniqx[which.max(tabulate(match(X, uniqx)))]
}
mode <- getmode(X)
print(mode)
uniqx <- unique(X)
uniqx
uniqx[which.max(tabulate(match(X, uniqx)))]
getmode <- function(X){
uniqx <- unique(X)
uniqx[which.min(tabulate(match(X, uniqx)))]
}
mode <- getmode(X)
print(mode)
getmode <- function(X){
uniqx <- unique(X)
uniqx[which.min(tabulate(match(X, uniqx)))]
}
mode <- getmode(X)
print(mode)
tabulate(match(X, uniqx)
)
match(X, uniqx)
n <- 10
X <- c(64630, 11735, 64630, 99233, 14470, 4978, 73429, 38120, 51135, 67060)
getmode <- function(X){
uniqx <- unique(X)
uniqx[which.min(tabulate(match(X, uniqx)))]
}
mode <- getmode(X)
print(mode)
n <- 10
X <- c(64630, 11735, 64630, 99233, 14470, 4978, 73429, 38120, 51135, 67060)
getmode <- function(X){
uniqx <- unique(X)
uniqx[which.max(tabulate(match(X, uniqx)))]
}
mode <- getmode(X)
print(mode)
getmode <- function(X){
uniqx <- unique(X)
uniqx[which.max(tabulate(match(X, uniqx)))]
}
mode <- getmode(X)
print(mode)
n <- 10
X <- c(64630, 11735, 14216, 99233, 99233, 4978, 73429, 38120, 51135, 67060)
getmode <- function(X){
uniqx <- unique(X)
uniqx[which.max(tabulate(match(X, uniqx)))]
}
mode <- getmode(X)
print(mode)
getmode <- function(X){
uniqx <- unique(X)
return tabulate(match(X, uniqx))
}
n_mode <- getmode(X)
print(n_mode)
uniqx <- unique(X)
tabulate(match(X, uniqx))
n <- 10
X <- c(64630, 11735, 14216, 99233, 14470, 4978, 73429, 38120, 51135, 67060)
n <- 10
X <- c(64630, 11735, 14216, 99233, 14470, 4978, 73429, 38120, 51135, 67060)
n <- 10
X <- c(64630, 11735, 14216, 99233, 14470, 4978, 73429, 38120, 51135, 67060)
n <- 10
X <- c(64630, 11735, 14216, 99233, 14470, 4978, 73429, 38120, 51135, 67060)
getmode <- function(X){
uniqx <- unique(X)
return tabulate(match(X, uniqx))
}
n_mode <- getmode(X)
print(n_mode)
n_mode <- table(X)
n_mode
sort(X, decreasing = TRUE
sort(X, decreasing = TRUE)
n <- 10
X <- c(64630, 11735, 14216, 99233, 14470, 4978, 73429, 38120, 51135, 67060)
sort.int(X)
n <- 10
X <- c(64630, 11735, 14216, 99233, 14470, 4978, 73429, 38120, 51135, 67060)
getmode <- function(X){
uniqx <- unique(sort.int(X))
uniqx[which.max(tabulate(match(X, uniqx)))]
}
mode <- getmode(X)
print(mode)
n <- 10
X <- c(64630, 11735, 14216, 99233, 14470, 4978, 73429, 38120, 51135, 67060)
# Mean
mean(X))
# Mediun
median(X)
# Mode
getmode <- function(X){
uniqx <- unique(sort.int(X))
uniqx[which.max(tabulate(match(X, uniqx)))]
}
getmode(X)
n <- 10
X <- c(64630, 11735, 14216, 99233, 14470, 4978, 73429, 38120, 51135, 67060)
# Mean
mean(X
# Mediun
median(X)
# Mode
getmode <- function(X){
uniqx <- unique(sort.int(X))
uniqx[which.max(tabulate(match(X, uniqx)))]
}
getmode(X)
n <- 10
X <- c(64630, 11735, 14216, 99233, 14470, 4978, 73429, 38120, 51135, 67060)
# Mean
mean(X)
# Mediun
median(X)
# Mode
getmode <- function(X){
uniqx <- unique(sort.int(X))
uniqx[which.max(tabulate(match(X, uniqx)))]
}
getmode(X)
n <- 10
X <- c(64630, 11735, 14216, 99233, 14470, 4978, 73429, 38120, 51135, 67060)
# Mean
cat(mean(X), "\n")
# Mediun
cat(median(X), "\n")
# Mode
getmode <- function(X){
uniqx <- unique(sort.int(X))
uniqx[which.max(tabulate(match(X, uniqx)))]
}
cat(getmode(X), "\n")
n <- 20
X <- c(
6392, 51608, 71247, 14271, 48327, 50618, 67435, 47029, 61857, 22987, 64858, 99745, 75504, 85464, 60482, 30320, 11342, 48808, 66882, 40522)
cat(mean(X), "\n")
cat(median(X), "\n")
unique(X)
tabulate(match(X, unique(X)))
# Mediun
cat(round(median(X), digits = 1), "\n")
cat(format(median(X), digits = 1), "\n")
getmode <- function(X){
uniqx <- unique(sort.int(X))
uniqx[which.max(tabulate(match(X, uniqx)))]
}
cat(getmode(X), "\n")
cat(signif(median(X), 6), "\n")
signif(median(X), 6)
format(median(X), digits = 2, nsmall = 2)
format(median(X), digits = 2, nsmall = 1)
as.integer(format(median(X), digits = 2, nsmall = 1))
noquote(format(median(X), digits = 2, nsmall = 1))
n <- 20
X <- c(
6392, 51608, 71247, 14271, 48327, 50618, 67435, 47029, 61857, 22987, 64858, 99745, 75504, 85464, 60482, 30320, 11342, 48808, 66882, 40522)
# Mean
cat(mean(X), "\n")
# Median
cat(noquote(format(median(X), digits = 2, nsmall = 1)), "\n")
# Mode
getmode <- function(X){
uniqx <- unique(sort.int(X))
uniqx[which.max(tabulate(match(X, uniqx)))]
}
cat(getmode(X), "\n")
round(median(X), 6)
N <- length(X)
N
X <- c(
6392, 51608, 71247, 14271, 48327, 50618, 67435, 47029, 61857, 22987, 64858, 99745, 75504, 85464, 60482, 30320, 11342, 48808, 66882, 40522)
N <- cat(length(X))
X <- c(
6392, 51608, 71247, 14271, 48327, 50618, 67435, 47029, 61857, 22987, 64858, 99745, 75504, 85464, 60482, 30320, 11342, 48808, 66882, 40522)
cat(noquote("%1.1f", median(X)), "\n")
cat(noquote(sprintf("%1.1f", median(X))), "\n")
N <- readline(prompt = "Number of values: ")
X <- c(6392, 51608, 71247, 14271, 48327, 50618, 67435, 47029, 61857, 22987, 64858, 99745, 75504, 85464, 60482, 30320, 11342, 48808, 66882, 40522)
a <- c(6392, 51608, 71247, 14271, 48327, 50618, 67435, 47029, 61857, 22987, 64858, 99745, 75504, 85464, 60482, 30320, 11342, 48808, 66882, 40522)
X = scan(a)
cat(mean(a),median(a),fill=1)
X = data.frame(a)
View(X)
X1=data.frame(table(X))
View(X1)
Y = merge(X,X1,all.X=T)
View(Y)
X = data.frame(a)
View(X)
X1=data.frame(table(a))
View(X1)
Y = merge(X,X1,all.X=T)
View(Y)
min(Y[Y[,2]==max(Y[,2]),1])
setwd("D:/Statistics/Linear Regression")
library(MASS)
library(ISLR)
path = "http://faculty.marshall.usc.edu/gareth-james/ISL/Advertising.csv"
data = read.csv(path, heheader =  TRUE. na.strings = "?")
data = read.csv(path, header =  TRUE, na.strings = "?")
attach(data)
View(data)
rownames(data) = data[, 1]
View(data)
data = data[, -1]
cor(sales, TV)
lm.fit = lm(sales~TV)
lm.fit
ls(lm.fit)
lm.fit$residuals
lm.fit$effects
lm.fit$rank
lm.fit$assign
lm.fit$qr
lm.fit$call
lm.fit$terms
lm.fit$model
ls(summary(lm.fit))
summary(lm.fit)
lm.fit$coefficients
cor(sales, TV)^2
data("Advertising.csv", package = "ISLR")
data("Advertising", package = "ISLR")
library(MASS)
library(ISLR)
library(tidyverse)
library(ggpubr)
path = path = "http://faculty.marshall.usc.edu/gareth-james/ISL/Advertising.csv"
data = read.csv(path, header = TRUE, na.strings = "?")
data <- data[, -1]
# Missing data
visdat:: vis_dat(data)
# Visualise data
ggplot(data, aes(x = TV, y = sales)) +
geom_point()
ggplot(data, aes(x = TV, y = sales)) + geom_point() + stat_smooth
ggplot(data, aes(x = TV, y = sales)) + geom_point() + stat_smooth()
ggplot(data, aes(x = TV, y = sales)) +
geom_point() +
stat_smooth(method = lm)
confint(lm.fit)
lm.fit = lm(sales~TV)
lm.fit
confint(lm.fit)
